"""
This type stub file was generated by pyright.
"""

import contextlib
import sys
from collections.abc import AsyncIterator, Callable, Sequence
from contextlib import AbstractAsyncContextManager
from starlette.applications import Starlette
from typing import TypeAlias

if sys.version_info < (3, 10):
    ...
else:
    ...
LifespanList: TypeAlias = Sequence[Callable[[Starlette], AbstractAsyncContextManager[None]]]
LOGGER = ...
class Lifespans:
    def __init__(self, lifespans: LifespanList) -> None:
        ...

    def __call__(self, app: Starlette) -> AbstractAsyncContextManager[None]:
        ...



@contextlib.asynccontextmanager
async def lsp(app: Starlette) -> AsyncIterator[None]:
    ...

@contextlib.asynccontextmanager
async def watcher(app: Starlette) -> AsyncIterator[None]:
    ...

@contextlib.asynccontextmanager
async def open_browser(app: Starlette) -> AsyncIterator[None]:
    ...

@contextlib.asynccontextmanager
async def logging(app: Starlette) -> AsyncIterator[None]:
    ...

@contextlib.asynccontextmanager
async def signal_handler(app: Starlette) -> AsyncIterator[None]:
    ...

@contextlib.asynccontextmanager
async def etc(app: Starlette) -> AsyncIterator[None]:
    ...
