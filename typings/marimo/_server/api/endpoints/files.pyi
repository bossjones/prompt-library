"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING
from starlette.authentication import requires
from starlette.responses import PlainTextResponse
from marimo._server.models.models import BaseResponse, ReadCodeResponse
from starlette.requests import Request

if TYPE_CHECKING:
    ...
LOGGER = ...
router = ...
@router.post("/read_code")
@requires("edit")
async def read_code(*, request: Request) -> ReadCodeResponse:
    """
    responses:
        200:
            description: Read the code from the server
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/ReadCodeResponse"
        400:
            description: File must be saved before downloading
    """
    ...

@router.post("/rename")
@requires("edit")
async def rename_file(*, request: Request) -> BaseResponse:
    """
    requestBody:
        content:
            application/json:
                schema:
                    $ref: "#/components/schemas/RenameFileRequest"
    responses:
        200:
            description: Rename the current app
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/SuccessResponse"
    """
    ...

@router.post("/open")
@requires("edit")
async def open_file(*, request: Request) -> BaseResponse:
    """
    requestBody:
        content:
            application/json:
                schema:
                    $ref: "#/components/schemas/OpenFileRequest"
    responses:
        200:
            description: Open a file
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/SuccessResponse"
        400:
            description: File does not exist
    """
    ...

@router.post("/save")
@requires("edit")
async def save(*, request: Request) -> PlainTextResponse:
    """
    requestBody:
        content:
            application/json:
                schema:
                    $ref: "#/components/schemas/SaveNotebookRequest"
    responses:
        200:
            description: Save the current app
            content:
                text/plain:
                    schema:
                        type: string
    """
    ...

@router.post("/copy")
@requires("edit")
async def copy(*, request: Request) -> PlainTextResponse:
    """
    requestBody:
        content:
            application/json:
                schema:
                    $ref: "#/components/schemas/CopyNotebookRequest"
    responses:
        200:
            description: Copy notebook
            content:
                text/plain:
                    schema:
                        type: string
    """
    ...

@router.post("/save_app_config")
@requires("edit")
async def save_app_config(*, request: Request) -> PlainTextResponse:
    """
    requestBody:
        content:
            application/json:
                schema:
                    $ref: "#/components/schemas/SaveAppConfigurationRequest"
    responses:
        200:
            description: Save the app configuration
            content:
                text/plain:
                    schema:
                        type: string
    """
    ...
