"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import Any, Literal, Optional, Union
from marimo._ast.cell import CellId_t
from marimo._messaging.cell_output import CellOutput
from marimo._messaging.ops import CellOp, MessageOperation
from marimo._runtime.requests import ControlRequest

class SessionView:
    """
    This stores the current view of the session.

    Which are the cell's outputs, status, and console.
    """
    def __init__(self) -> None:
        ...

    def add_raw_operation(self, raw_operation: Any) -> None:
        @dataclass
        class _Container:
            ...



    def add_control_request(self, request: ControlRequest) -> None:
        ...

    def add_stdin(self, stdin: str) -> None:
        ...

    def add_operation(self, operation: MessageOperation) -> None:
        ...

    def get_cell_outputs(self, ids: list[CellId_t]) -> dict[CellId_t, CellOutput]:
        """Get the outputs for the given cell ids."""
        ...

    def get_cell_console_outputs(self, ids: list[CellId_t]) -> dict[CellId_t, list[CellOutput]]:
        """Get the console outputs for the given cell ids."""
        ...

    def save_execution_time(self, operation: MessageOperation, event: Literal["start", "end"]) -> None:
        """Updates execution time for given cell."""
        ...

    @property
    def operations(self) -> list[MessageOperation]:
        ...

    def mark_auto_export_html(self) -> None:
        ...

    def mark_auto_export_md(self) -> None:
        ...



def merge_cell_operation(previous: Optional[CellOp], next_: CellOp) -> CellOp:
    """Merge two cell operations."""
    ...

def as_list(value: Union[Any, Optional[Any], list[Any]]) -> list[Any]:
    ...
