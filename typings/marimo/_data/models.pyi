"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from datetime import date, datetime, time, timedelta
from decimal import Decimal
from typing import Any, List, Literal, Optional, Union

"""
This type stub file was generated by pyright.
"""
DataType = Literal["string", "boolean", "integer", "number", "date", "datetime", "time", "unknown",]
ExternalDataType = str
@dataclass
class DataTableColumn:
    """
    Represents a column in a data table.

    Attributes:
        name (str): The name of the column.
        type (DataType): The data type of the column.
    """
    name: str
    type: DataType
    external_type: ExternalDataType
    sample_values: List[Any]
    ...


DataTableSource = Literal["local", "duckdb"]
@dataclass
class DataTable:
    """
    Represents a data table.

    Attributes:
        source (str): The source of the data table.
        name (str): The name of the data table.
        num_rows (Optional[int]): The number of rows in the data table.
        num_columns (Optional[int]): The number of columns in the data table.
        variable_name (Optional[str]): The variable name associated with
        the data table.
        columns (List[DataTableColumn]): The list of columns in the data table.
    """
    source_type: DataTableSource
    source: str
    name: str
    num_rows: Optional[int]
    num_columns: Optional[int]
    variable_name: Optional[str]
    columns: List[DataTableColumn]
    ...


NumericLiteral = Union[int, float, Decimal]
TemporalLiteral = Union[date, time, datetime, timedelta]
NonNestedLiteral = Union[NumericLiteral, TemporalLiteral, str, bool, bytes]
@dataclass
class ColumnSummary:
    """
    Represents a summary of a column in a data table.

    """
    total: Optional[int] = ...
    nulls: Optional[int] = ...
    unique: Optional[int] = ...
    min: Optional[NonNestedLiteral] = ...
    max: Optional[NonNestedLiteral] = ...
    mean: Optional[NonNestedLiteral] = ...
    median: Optional[NonNestedLiteral] = ...
    std: Optional[NonNestedLiteral] = ...
    true: Optional[int] = ...
    false: Optional[int] = ...
    p5: Optional[NonNestedLiteral] = ...
    p25: Optional[NonNestedLiteral] = ...
    p75: Optional[NonNestedLiteral] = ...
    p95: Optional[NonNestedLiteral] = ...


