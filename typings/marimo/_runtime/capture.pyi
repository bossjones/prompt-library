"""
This type stub file was generated by pyright.
"""

import contextlib
import io
from typing import Iterator

@contextlib.contextmanager
def capture_stdout() -> Iterator[io.StringIO]:
    """Capture standard output.

    Use this context manager to capture print statements and
    other output sent to standard output.

    **Example.**

    ```python
    with mo.capture_stdout() as buffer:
        print("Hello!")
    output = buffer.getvalue()
    ```
    """
    ...

@contextlib.contextmanager
def capture_stderr() -> Iterator[io.StringIO]:
    """Capture standard error.

    Use this context manager to capture output sent to standard error.

    **Example.**

    ```python
    with mo.capture_stderr() as buffer:
        sys.stderr.write("Hello!")
    output = buffer.getvalue()
    ```
    """
    ...

@contextlib.contextmanager
def redirect_stdout() -> Iterator[None]:
    """Redirect stdout to a cell's output area.

    ```python
    with mo.redirect_stdout():
        # These print statements will show up in the cell's output area
        print("Hello!")
        print("World!")
    ```
    """
    ...

@contextlib.contextmanager
def redirect_stderr() -> Iterator[None]:
    """Redirect `stderr` to a cell's output area.

    ```python
    with mo.redirect_stderr():
        # These messages will show up in the cell's output area
        sys.stderr.write("Hello!")
        sys.stderr.write("World!")
    ```
    """
    ...
