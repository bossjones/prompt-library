"""
This type stub file was generated by pyright.
"""

from abc import abstractmethod
from typing import Optional, Union
from marimo._config.config import MarimoConfig, PartialMarimoConfig

LOGGER = ...
def get_default_config_manager(*, current_path: Optional[str]) -> MarimoConfigManager:
    ...

@abstractmethod
class MarimoConfigReader:
    @abstractmethod
    def get_config(self, *, hide_secrets: bool = ...) -> MarimoConfig:
        """Get the configuration, optionally hiding secrets"""
        ...



class MarimoConfigManager(MarimoConfigReader):
    def __init__(self, user_config_mgr: UserConfigManager, *partials: PartialMarimoConfigReader) -> None:
        ...

    def get_user_config(self, *, hide_secrets: bool = ...) -> MarimoConfig:
        """Get the user configuration"""
        ...

    def get_config_overrides(self, *, hide_secrets: bool = ...) -> PartialMarimoConfig:
        """Get the configuration overrides"""
        ...

    def get_config(self, *, hide_secrets: bool = ...) -> MarimoConfig:
        """Get the configuration, by merging the user configuration and the configuration overrides"""
        ...

    def save_config(self, config: Union[MarimoConfig, PartialMarimoConfig]) -> MarimoConfig:
        """Save the configuration"""
        ...

    def with_overrides(self, overrides: PartialMarimoConfig) -> MarimoConfigManager:
        """Get a new config manager with the given overrides"""
        ...



@abstractmethod
class PartialMarimoConfigReader:
    @abstractmethod
    def get_config(self, *, hide_secrets: bool = ...) -> PartialMarimoConfig:
        """Get the configuration, as a partial configuration"""
        ...



class ProjectConfigManager(PartialMarimoConfigReader):
    """Read the project configuration"""
    def __init__(self, start_path: str) -> None:
        ...

    def get_config(self, *, hide_secrets: bool = ...) -> PartialMarimoConfig:
        ...



class UserConfigManager(MarimoConfigReader):
    """Read and write the user configuration"""
    def save_config(self, config: Union[MarimoConfig, PartialMarimoConfig]) -> MarimoConfig:
        ...

    def save_config_if_missing(self) -> None:
        ...

    def get_config(self, *, hide_secrets: bool = ...) -> MarimoConfig:
        ...

    def get_config_path(self) -> str:
        ...



class MarimoConfigReaderWithOverrides(PartialMarimoConfigReader):
    """Read the configuration, with overrides"""
    def __init__(self, override_config: PartialMarimoConfig) -> None:
        ...

    def get_config(self, *, hide_secrets: bool = ...) -> PartialMarimoConfig:
        ...
