"""
This type stub file was generated by pyright.
"""

from typing import Generic, TYPE_CHECKING, TypeVar
from multiprocessing.connection import Connection

if TYPE_CHECKING:
    ...
T = TypeVar("T")
class TypedConnection(Generic[T]):
    """Wrapper around a connection with strong typing."""
    def __init__(self, delegate: Connection) -> None:
        ...

    @classmethod
    def of(cls, delegate: Connection) -> TypedConnection[T]:
        """Create a typed connection from a connection."""
        ...

    def send(self, obj: T) -> None:
        ...

    def recv(self) -> T:
        ...

    def poll(self) -> bool:
        ...

    def fileno(self) -> int:
        ...

    @property
    def closed(self) -> bool:
        ...

    def close(self) -> None:
        ...
