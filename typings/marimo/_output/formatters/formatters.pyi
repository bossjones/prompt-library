"""
This type stub file was generated by pyright.
"""

from typing import Sequence
from marimo._config.config import Theme
from marimo._output.formatters.formatter_factory import FormatterFactory

THIRD_PARTY_FACTORIES: dict[str, FormatterFactory] = ...
NATIVE_FACTORIES: Sequence[FormatterFactory] = ...
def register_formatters(theme: Theme = ...) -> None:
    """Register formatters with marimo.

    marimo comes packaged with rich formatters for a number of third-party
    libraries. This function hooks into Python's import system to register
    these formatters with the kernel if and when a supported third-party
    library is imported into a marimo notebook.

    Hooking into the import system is more complicated than the alternative
    of checking whether a package is installed (by importing it) and then
    registering its formatters at kernel start-up. However, because some
    packages imports take a long time, this alternative would add considerable
    delay at program start-up, as the kernel would block as it registered
    all formatters before running the notebook. Hooking into the import
    system makes formatter registration completely lazy, improving
    UX at the cost of increased complexity that we have to maintain. In this
    case, the trade-off is worth it.
    """
    ...
