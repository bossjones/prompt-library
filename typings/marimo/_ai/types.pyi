"""
This type stub file was generated by pyright.
"""

import abc
from dataclasses import dataclass
from typing import List, Literal, Optional, TypedDict

"""
This type stub file was generated by pyright.
"""
class ChatAttachmentDict(TypedDict):
    url: str
    content_type: Optional[str]
    name: Optional[str]
    ...


class ChatMessageDict(TypedDict):
    role: Literal["user", "assistant", "system"]
    content: str
    attachments: Optional[List[ChatAttachmentDict]]
    ...


class ChatModelConfigDict(TypedDict, total=False):
    max_tokens: Optional[int]
    temperature: Optional[float]
    top_p: Optional[float]
    top_k: Optional[int]
    frequency_penalty: Optional[float]
    presence_penalty: Optional[float]
    ...


@dataclass
class ChatAttachment:
    url: str
    name: str = ...
    content_type: Optional[str] = ...
    def __post_init__(self) -> None:
        ...
    


@dataclass
class ChatMessage:
    """
    A message in a chat.
    """
    role: Literal["user", "assistant", "system"]
    content: object
    attachments: Optional[List[ChatAttachment]] = ...


@dataclass
class ChatModelConfig:
    max_tokens: Optional[int] = ...
    temperature: Optional[float] = ...
    top_p: Optional[float] = ...
    top_k: Optional[int] = ...
    frequency_penalty: Optional[float] = ...
    presence_penalty: Optional[float] = ...


class ChatModel(abc.ABC):
    @abc.abstractmethod
    def __call__(self, messages: List[ChatMessage], config: ChatModelConfig) -> object:
        ...
    


