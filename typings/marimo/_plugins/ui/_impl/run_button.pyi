"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Final, Literal, Optional
from marimo._output.rich_help import mddoc
from marimo._plugins.ui._core.ui_element import UIElement

"""
This type stub file was generated by pyright.
"""
@mddoc
class run_button(UIElement[Any, Any]):
    """
    A button that can be used to trigger computation.

    **Example.**

    ```python
    # a button that when clicked will have its value set to True;
    # any cells referencing that button will automatically run.
    button = mo.ui.run_button()
    button
    ```

    ```python
    slider = mo.ui.slider(1, 10)
    slider
    ```

    ```python
    # if the button hasn't been clicked, don't run.
    mo.stop(not button.value)

    slider.value
    ```

    When clicked, `run_button`'s value is set to `True`, and any cells
    referencing it are run. After those cells are run, `run_button`'s
    value will automatically be set back to `False` as long as automatic
    execution is enabled.

    **Attributes.**

    - `value`: the value of the button; `True` when clicked, and reset to
      `False` after cells referencing the button finish running (when
      automatic execution is enabled).

    **Initialization Args.**

    - `kind`: 'neutral', 'success', 'warn', or 'danger'
    - `disabled`: whether the button is disabled
    - `tooltip`: a tooltip to display for the button
    - `label`: markdown label for the element
    - `on_change`: optional callback to run when this element's value changes
    - `full_width`: whether the input should take up the full width of its
        container
    - `keyboard_shortcut`: keyboard shortcut to trigger the button (e.g. 'Ctrl-L')
    """
    _name: Final[str] = ...
    def __init__(self, kind: Literal["neutral", "success", "warn", "danger"] = ..., disabled: bool = ..., tooltip: Optional[str] = ..., *, label: str = ..., on_change: Optional[Callable[[Any], None]] = ..., full_width: bool = ..., keyboard_shortcut: Optional[str] = ...) -> None:
        ...
    


