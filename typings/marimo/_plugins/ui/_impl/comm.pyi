"""
This type stub file was generated by pyright.
"""

from typing import Callable, Dict, List, Optional

class MarimoCommManager:
    comms: Dict[str, MarimoComm] = ...
    def register_comm(self, comm: MarimoComm) -> str:
        ...

    def unregister_comm(self, comm: MarimoComm) -> MarimoComm:
        ...



MsgCallback = Callable[[Dict[str, object]], None]
DataType = Optional[Dict[str, object]]
MetadataType = Optional[Dict[str, object]]
BufferType = Optional[List[bytes]]
COMM_MESSAGE_NAME = ...
COMM_OPEN_NAME = ...
COMM_CLOSE_NAME = ...
class MarimoComm:
    kernel = ...
    _msg_callback: Optional[MsgCallback]
    _close_callback: Optional[MsgCallback]
    _closed: bool = ...
    _closed_data: Dict[str, object] = ...
    def __init__(self, comm_id: str, comm_manager: MarimoCommManager, target_name: str, data: DataType = ..., metadata: MetadataType = ..., buffers: BufferType = ..., **keys: object) -> None:
        ...

    def open(self, data: DataType = ..., metadata: MetadataType = ..., buffers: BufferType = ..., **keys: object) -> None:
        ...

    def send(self, data: DataType = ..., metadata: MetadataType = ..., buffers: BufferType = ...) -> None:
        ...

    def close(self, data: DataType = ..., metadata: MetadataType = ..., buffers: BufferType = ..., deleting: bool = ...) -> None:
        ...

    def __del__(self) -> None:
        ...

    def flush(self) -> None:
        ...

    def on_msg(self, callback: MsgCallback) -> None:
        ...

    def on_close(self, callback: MsgCallback) -> None:
        ...

    def handle_msg(self, msg: Dict[str, object]) -> None:
        ...

    def handle_close(self, msg: Dict[str, object]) -> None:
        ...
