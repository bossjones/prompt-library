"""
This type stub file was generated by pyright.
"""

import ibis
import pandas as pd
import polars as pl
from typing import List, TYPE_CHECKING
from marimo._plugins.ui._impl.dataframes.transforms.types import AggregateTransform, ColumnConversionTransform, ExpandDictTransform, ExplodeColumnsTransform, FilterRowsTransform, GroupByTransform, RenameColumnTransform, SampleRowsTransform, SelectColumnsTransform, ShuffleRowsTransform, SortColumnTransform, Transform, TransformHandler

if TYPE_CHECKING:
    ...
class PandasTransformHandler(TransformHandler["pd.DataFrame"]):
    @staticmethod
    def handle_column_conversion(df: pd.DataFrame, transform: ColumnConversionTransform) -> pd.DataFrame:
        ...

    @staticmethod
    def handle_rename_column(df: pd.DataFrame, transform: RenameColumnTransform) -> pd.DataFrame:
        ...

    @staticmethod
    def handle_sort_column(df: pd.DataFrame, transform: SortColumnTransform) -> pd.DataFrame:
        ...

    @staticmethod
    def handle_filter_rows(df: pd.DataFrame, transform: FilterRowsTransform) -> pd.DataFrame:
        ...

    @staticmethod
    def handle_group_by(df: pd.DataFrame, transform: GroupByTransform) -> pd.DataFrame:
        ...

    @staticmethod
    def handle_aggregate(df: pd.DataFrame, transform: AggregateTransform) -> pd.DataFrame:
        ...

    @staticmethod
    def handle_select_columns(df: pd.DataFrame, transform: SelectColumnsTransform) -> pd.DataFrame:
        ...

    @staticmethod
    def handle_shuffle_rows(df: pd.DataFrame, transform: ShuffleRowsTransform) -> pd.DataFrame:
        ...

    @staticmethod
    def handle_sample_rows(df: pd.DataFrame, transform: SampleRowsTransform) -> pd.DataFrame:
        ...

    @staticmethod
    def handle_explode_columns(df: pd.DataFrame, transform: ExplodeColumnsTransform) -> pd.DataFrame:
        ...

    @staticmethod
    def handle_expand_dict(df: pd.DataFrame, transform: ExpandDictTransform) -> pd.DataFrame:
        ...

    @staticmethod
    def as_python_code(df_name: str, columns: List[str], transforms: List[Transform]) -> str:
        ...



class PolarsTransformHandler(TransformHandler["pl.DataFrame"]):
    @staticmethod
    def handle_column_conversion(df: pl.DataFrame, transform: ColumnConversionTransform) -> pl.DataFrame:
        ...

    @staticmethod
    def handle_rename_column(df: pl.DataFrame, transform: RenameColumnTransform) -> pl.DataFrame:
        ...

    @staticmethod
    def handle_sort_column(df: pl.DataFrame, transform: SortColumnTransform) -> pl.DataFrame:
        ...

    @staticmethod
    def handle_filter_rows(df: pl.DataFrame, transform: FilterRowsTransform) -> pl.DataFrame:
        ...

    @staticmethod
    def handle_group_by(df: pl.DataFrame, transform: GroupByTransform) -> pl.DataFrame:
        ...

    @staticmethod
    def handle_aggregate(df: pl.DataFrame, transform: AggregateTransform) -> pl.DataFrame:
        ...

    @staticmethod
    def handle_select_columns(df: pl.DataFrame, transform: SelectColumnsTransform) -> pl.DataFrame:
        ...

    @staticmethod
    def handle_shuffle_rows(df: pl.DataFrame, transform: ShuffleRowsTransform) -> pl.DataFrame:
        ...

    @staticmethod
    def handle_sample_rows(df: pl.DataFrame, transform: SampleRowsTransform) -> pl.DataFrame:
        ...

    @staticmethod
    def handle_explode_columns(df: pl.DataFrame, transform: ExplodeColumnsTransform) -> pl.DataFrame:
        ...

    @staticmethod
    def handle_expand_dict(df: pl.DataFrame, transform: ExpandDictTransform) -> pl.DataFrame:
        ...

    @staticmethod
    def as_python_code(df_name: str, columns: List[str], transforms: List[Transform]) -> str:
        ...



class IbisTransformHandler(TransformHandler["ibis.Table"]):
    @staticmethod
    def handle_column_conversion(df: ibis.Table, transform: ColumnConversionTransform) -> ibis.Table:
        ...

    @staticmethod
    def handle_rename_column(df: ibis.Table, transform: RenameColumnTransform) -> ibis.Table:
        ...

    @staticmethod
    def handle_sort_column(df: ibis.Table, transform: SortColumnTransform) -> ibis.Table:
        ...

    @staticmethod
    def handle_filter_rows(df: ibis.Table, transform: FilterRowsTransform) -> ibis.Table:
        ...

    @staticmethod
    def handle_group_by(df: ibis.Table, transform: GroupByTransform) -> ibis.Table:
        ...

    @staticmethod
    def handle_aggregate(df: ibis.Table, transform: AggregateTransform) -> ibis.Table:
        ...

    @staticmethod
    def handle_select_columns(df: ibis.Table, transform: SelectColumnsTransform) -> ibis.Table:
        ...

    @staticmethod
    def handle_shuffle_rows(df: ibis.Table, transform: ShuffleRowsTransform) -> ibis.Table:
        ...

    @staticmethod
    def handle_sample_rows(df: ibis.Table, transform: SampleRowsTransform) -> ibis.Table:
        ...

    @staticmethod
    def handle_explode_columns(df: ibis.Table, transform: ExplodeColumnsTransform) -> ibis.Table:
        ...

    @staticmethod
    def handle_expand_dict(df: ibis.Table, transform: ExpandDictTransform) -> ibis.Table:
        ...

    @staticmethod
    def as_sql_code(transformed_df: ibis.Table) -> str | None:
        ...
