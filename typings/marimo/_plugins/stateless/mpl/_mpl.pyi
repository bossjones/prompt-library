"""
This type stub file was generated by pyright.
"""

from typing import Any, Optional, TYPE_CHECKING, Union
from marimo._output.hypertext import Html
from marimo._output.rich_help import mddoc
from marimo._runtime.cell_lifecycle_item import CellLifecycleItem
from matplotlib.axes import Axes
from matplotlib.backends.backend_webagg_core import FigureManagerWebAgg
from matplotlib.figure import Figure
from starlette.applications import Starlette

"""
This type stub file was generated by pyright.
"""
if TYPE_CHECKING:
    ...
class FigureManagers:
    def __init__(self) -> None:
        ...
    
    def add(self, manager: FigureManagerWebAgg) -> None:
        ...
    
    def get(self, figure_id: str) -> FigureManagerWebAgg:
        ...
    
    def remove(self, manager: FigureManagerWebAgg) -> None:
        ...
    


figure_managers = ...
def create_application() -> Starlette:
    ...

_app: Optional[Starlette] = ...
def get_or_create_application(app_host: Optional[str] = ..., free_port: Optional[int] = ..., secure_host: Optional[bool] = ...) -> Starlette:
    ...

def new_figure_manager_given_figure(num: int, figure: Union[Figure, Axes]) -> Any:
    class FigureManagerWebAgg(CoreFigureManagerWebAgg):
        ...
    
    
    class FigureCanvasWebAgg(FigureCanvasWebAggCore):
        ...
    
    

@mddoc
def interactive(figure: Union[Figure, Axes]) -> Html:
    """Render a matplotlib figure using an interactive viewer.

    The interactive viewer allows you to pan, zoom, and see plot coordinates
    on mouse hover.

    **Example**:

    ```python
    plt.plot([1, 2])
    # plt.gcf() gets the current figure
    mo.mpl.interactive(plt.gcf())
    ```

    **Args**:

    - figure: a matplotlib `Figure` or `Axes` object

    **Returns**:

    - An interactive matplotlib figure as an `Html` object
    """
    class CleanupHandle(CellLifecycleItem):
        ...
    
    

html_content = ...
css_content = ...
