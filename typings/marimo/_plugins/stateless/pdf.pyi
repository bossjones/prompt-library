"""
This type stub file was generated by pyright.
"""

import io
from typing import Any, Optional, TYPE_CHECKING, Union
from marimo._output.hypertext import Html
from marimo._output.rich_help import mddoc

"""
This type stub file was generated by pyright.
"""
if TYPE_CHECKING:
    ...
@mddoc
def pdf(src: Union[str, io.IOBase], initial_page: Optional[int] = ..., width: Optional[Union[int, str]] = ..., height: Optional[Union[int, str]] = ..., style: Optional[dict[str, Any]] = ...) -> Html:
    """Render a PDF.

    This currently uses the native browser PDF viewer,
    but may be replaced with a custom viewer.

    **Example.**

    ```python3
    mo.pdf(
        src="https://arxiv.org/pdf/2104.00282.pdf",
        width="100%",
        height="50vh",
    )

    with open("paper.pdf", "rb") as file:
        mo.pdf(src=file)
    ```

    **Args.**

    - `src`: the URL of the pdf or a file-like object
    - `initial_page`: the page to open the pdf to.
        only works if `src` is a URL
    - `width`: the width of the pdf
    - `height`: the height of the pdf. for a percentage
        of the user's viewport, use a string like `"50vh"`
    - `style`: a dictionary of CSS styles to apply to the pdf

    **Returns.**

    `Html` object
    """
    ...

