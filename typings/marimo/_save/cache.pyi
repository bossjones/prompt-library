"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import Any, Literal, Optional, TYPE_CHECKING
from marimo._ast.visitor import Name

"""
This type stub file was generated by pyright.
"""
if TYPE_CHECKING:
    ...
CacheType = Literal["ContextExecutionPath", "ContentAddressed", "ExecutionPath", "Pure", "Deferred", "Unknown",]
CACHE_PREFIX: dict[CacheType, str] = ...
ValidCacheSha = ...
MetaKey = Literal["return"]
class CacheException(BaseException):
    ...


@dataclass
class Cache:
    defs: dict[Name, Any]
    hash: str
    stateful_refs: set[str]
    cache_type: CacheType
    hit: bool
    meta: dict[MetaKey, Any]
    def restore(self, scope: dict[str, Any]) -> None:
        """Restores values from cache, into scope."""
        ...
    
    def update(self, scope: dict[str, Any], meta: Optional[dict[MetaKey, Any]] = ...) -> None:
        """Loads values from scope, updating the cache."""
        ...
    
    def contextual_defs(self) -> dict[tuple[Name, Name], Any]:
        """Uses context to resolve private variable names."""
        ...
    


