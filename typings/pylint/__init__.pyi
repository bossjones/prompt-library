"""
This type stub file was generated by pyright.
"""

import os
import sys
from collections.abc import Sequence
from typing import NoReturn
from pylint.__pkginfo__ import __version__

"""
This type stub file was generated by pyright.
"""
__all__ = ["__version__", "version", "modify_sys_path", "run_pylint", "run_symilar", "run_pyreverse"]
def run_pylint(argv: Sequence[str] | None = ...) -> None:
    """Run pylint.

    argv can be a sequence of strings normally supplied as arguments on the command line
    """
    ...

def run_pyreverse(argv: Sequence[str] | None = ...) -> NoReturn:
    """Run pyreverse.

    argv can be a sequence of strings normally supplied as arguments on the command line
    """
    ...

def run_symilar(argv: Sequence[str] | None = ...) -> NoReturn:
    """Run symilar.

    argv can be a sequence of strings normally supplied as arguments on the command line
    """
    ...

def modify_sys_path() -> None:
    """Modify sys path for execution as Python module.

    Strip out the current working directory from sys.path.
    Having the working directory in `sys.path` means that `pylint` might
    inadvertently import user code from modules having the same name as
    stdlib or pylint's own modules.
    CPython issue: https://bugs.python.org/issue33053

    - Remove the first entry. This will always be either "" or the working directory
    - Remove the working directory from the second and third entries
      if PYTHONPATH includes a ":" at the beginning or the end.
      https://github.com/pylint-dev/pylint/issues/3636
      Don't remove it if PYTHONPATH contains the cwd or '.' as the entry will
      only be added once.
    - Don't remove the working directory from the rest. It will be included
      if pylint is installed in an editable configuration (as the last item).
      https://github.com/pylint-dev/pylint/issues/4161
    """
    ...

if (3, 12, 0) <= sys.version_info[: 3] < (3, 12, 3):
    ...
version = ...
