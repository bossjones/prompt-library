"""
This type stub file was generated by pyright.
"""

import sys
from collections.abc import Callable
from pathlib import Path
from typing import Literal, ParamSpec, TypeVar

"""Utils for the 'pylint-config' command."""
if sys.version_info >= (3, 10):
    ...
else:
    ...
_P = ParamSpec("_P")
_ReturnValueT = TypeVar("_ReturnValueT", bool, str)
SUPPORTED_FORMATS = ...
YES_NO_ANSWERS = ...
class InvalidUserInput(Exception):
    """Raised whenever a user input is invalid."""
    def __init__(self, valid_input: str, input_value: str, *args: object) -> None:
        ...



def should_retry_after_invalid_input(func: Callable[_P, _ReturnValueT]) -> Callable[_P, _ReturnValueT]:
    """Decorator that handles InvalidUserInput exceptions and retries."""
    ...

@should_retry_after_invalid_input
def get_and_validate_format() -> Literal["toml", "ini"]:
    """Make sure that the output format is either .toml or .ini."""
    ...

@should_retry_after_invalid_input
def validate_yes_no(question: str, default: Literal["yes", "no"] | None) -> bool:
    """Validate that a yes or no answer is correct."""
    ...

def get_minimal_setting() -> bool:
    """Ask the user if they want to use the minimal setting."""
    ...

def get_and_validate_output_file() -> tuple[bool, Path]:
    """Make sure that the output file is correct."""
    ...
