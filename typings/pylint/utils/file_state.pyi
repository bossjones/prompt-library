"""
This type stub file was generated by pyright.
"""

from collections.abc import Iterator
from typing import Literal, TYPE_CHECKING
from astroid import nodes
from pylint.message import MessageDefinition, MessageDefinitionStore

"""
This type stub file was generated by pyright.
"""
if TYPE_CHECKING:
    ...
MessageStateDict = dict[str, dict[int, bool]]
class FileState:
    """Hold internal state specific to the currently analyzed file."""
    def __init__(self, modname: str, msg_store: MessageDefinitionStore, node: nodes.Module | None = ..., *, is_base_filestate: bool = ...) -> None:
        ...
    
    def set_msg_status(self, msg: MessageDefinition, line: int, status: bool, scope: str = ...) -> None:
        """Set status (enabled/disable) for a given message at a given line."""
        ...
    
    def handle_ignored_message(self, state_scope: Literal[0, 1, 2] | None, msgid: str, line: int | None) -> None:
        """Report an ignored message.

        state_scope is either MSG_STATE_SCOPE_MODULE or MSG_STATE_SCOPE_CONFIG,
        depending on whether the message was disabled locally in the module,
        or globally.
        """
        ...
    
    def iter_spurious_suppression_messages(self, msgs_store: MessageDefinitionStore) -> Iterator[tuple[Literal["useless-suppression", "suppressed-message"], int, tuple[str] | tuple[str, int],]]:
        ...
    
    def get_effective_max_line_number(self) -> int | None:
        ...
    


