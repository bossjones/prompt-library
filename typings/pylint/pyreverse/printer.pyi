"""
This type stub file was generated by pyright.
"""

from abc import ABC, abstractmethod
from enum import Enum
from typing import NamedTuple
from astroid import nodes

"""Base class defining the interface for a printer."""
class NodeType(Enum):
    CLASS = ...
    PACKAGE = ...


class EdgeType(Enum):
    INHERITS = ...
    ASSOCIATION = ...
    AGGREGATION = ...
    USES = ...
    TYPE_DEPENDENCY = ...


class Layout(Enum):
    LEFT_TO_RIGHT = ...
    RIGHT_TO_LEFT = ...
    TOP_TO_BOTTOM = ...
    BOTTOM_TO_TOP = ...


class NodeProperties(NamedTuple):
    label: str
    attrs: list[str] | None = ...
    methods: list[nodes.FunctionDef] | None = ...
    color: str | None = ...
    fontcolor: str | None = ...


class Printer(ABC):
    """Base class defining the interface for a printer."""
    def __init__(self, title: str, layout: Layout | None = ..., use_automatic_namespace: bool | None = ...) -> None:
        ...

    def emit(self, line: str, force_newline: bool | None = ...) -> None:
        ...

    @abstractmethod
    def emit_node(self, name: str, type_: NodeType, properties: NodeProperties | None = ...) -> None:
        """Create a new node.

        Nodes can be classes, packages, participants etc.
        """
        ...

    @abstractmethod
    def emit_edge(self, from_node: str, to_node: str, type_: EdgeType, label: str | None = ...) -> None:
        """Create an edge from one node to another to display relationships."""
        ...

    def generate(self, outputfile: str) -> None:
        """Generate and save the final outputfile."""
        ...
